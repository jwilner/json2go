// Code generated by jsonschema2go. DO NOT EDIT.
package foo

import (
	"fmt"
	"regexp"
)

// Bar gives you some dumb info
// generated from https://example.com/testdata/generate/simple_pattern/foo/bar.json
type Bar struct {
	Name *string `json:"name,omitempty"`
}

var (
	barNamePattern = regexp.MustCompile(`^[0-9]+$`)
)

func (m *Bar) Validate() error {
	if m.Name != nil && !barNamePattern.MatchString(*m.Name) {
		return &validationError{
			errType:  "pattern",
			path:     []interface{}{"Name"},
			jsonPath: []interface{}{"name"},
			message:  fmt.Sprintf(`must match '^[0-9]+$' but got %q`, *m.Name),
		}
	}
	return nil
}

type valErr interface {
	ErrType() string
	JSONPath() []interface{}
	Path() []interface{}
	Message() string
}

type validationError struct {
	errType, message string
	jsonPath, path   []interface{}
}

func (e *validationError) ErrType() string {
	return e.errType
}

func (e *validationError) JSONPath() []interface{} {
	return e.jsonPath
}

func (e *validationError) Path() []interface{} {
	return e.path
}

func (e *validationError) Message() string {
	return e.message
}

func (e *validationError) Error() string {
	return fmt.Sprintf("%v: %v", e.path, e.message)
}

var _ valErr = new(validationError)
