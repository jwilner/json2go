// Code generated by jsonschema2go. DO NOT EDIT.
package foo

import (
	"encoding/json"
	"fmt"
	"github.com/jwilner/jsonschema2go/boxed"
)

// Bar gives you some dumb info
type Bar struct {
	Foo Foo `json:"foo,omitempty"`
}

func (m *Bar) Validate() error {
	if err := m.Foo.Validate(); err != nil {
		return err
	}
	return nil
}

type BarValidationError struct {
	errType, jsonField, field, message string
}

func (e *BarValidationError) ErrType() string {
	return e.errType
}

func (e *BarValidationError) JSONField() string {
	return e.jsonField
}

func (e *BarValidationError) Field() string {
	return e.field
}

func (e *BarValidationError) Message() string {
	return e.message
}

func (e *BarValidationError) Error() string {
	return fmt.Sprintf("%v: %v", e.field, e.message)
}

type Foo struct {
	Name boxed.String `json:"name"`
}

func (m *Foo) Validate() error {
	return nil
}

func (m *Foo) MarshalJSON() ([]byte, error) {
	inner := struct {
		Name *string `json:"name,omitempty"`
	}{}
	if m.Name.Set {
		inner.Name = &m.Name.String
	}
	return json.Marshal(inner)
}

type FooValidationError struct {
	errType, jsonField, field, message string
}

func (e *FooValidationError) ErrType() string {
	return e.errType
}

func (e *FooValidationError) JSONField() string {
	return e.jsonField
}

func (e *FooValidationError) Field() string {
	return e.field
}

func (e *FooValidationError) Message() string {
	return e.message
}

func (e *FooValidationError) Error() string {
	return fmt.Sprintf("%v: %v", e.field, e.message)
}
